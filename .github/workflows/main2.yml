name: main
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# README badge
# ![Time-Freeze Go CI](https://github.com/PhantomwireIT/time-freeze/actions/workflows/time-freeze-go-ci.yml/badge.svg)

jobs:
  live-dashboard:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repo
      - uses: actions/checkout@v3

      # 2️⃣ Set up Go
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      # 3️⃣ ASCII Splash Banner in Go
      - name: Go ASCII Splash
        run: |
          cat << 'EOF' > splash.go
          package main
          
          import (
              "fmt"
              "time"
          )
          
          func main() {
              ascii := []string{
"████████╗██╗ ███╗   ███╗███████╗",
"╚══██╔══╝██║ ████╗ ████║██╔════╝",
"   ██║   ██║ ██╔████╔██║█████╗  ",
"   ██║   ██║ ██║╚██╔╝██║██╔══╝  ",
"   ██║   ██║ ██║ ╚═╝ ██║███████╗",
"   ╚═╝   ╚═╝ ╚═╝     ╚═╝╚══════╝",
              }
              
              for i := 0; i < 2; i++ { // simple breathing loop
                  for _, line := range ascii {
                      fmt.Printf("\033[1;96m%s\033[0m\n", line)
                  }
                  time.Sleep(400 * time.Millisecond)
                  fmt.Print("\033[2J") // clear screen
              }
          }
          EOF
          go run splash.go

      # 4️⃣ Go Dashboard Simulation
      - name: Go Habit Dashboard
        run: |
          cat << 'EOF' > dashboard.go
          package main
          
          import (
              "fmt"
              "math/rand"
              "time"
          )
          
          func main() {
              habits := map[string]int{
                  "Code Daily": rand.Intn(101),
                  "Exercise":   rand.Intn(101),
                  "Read":       rand.Intn(101),
                  "Meditate":   rand.Intn(101),
                  "Sleep Well": rand.Intn(101),
              }

              fmt.Println("\033[1;34m==== Habit Tracker Dashboard ====\033[0m")
              for h, p := range habits {
                  bars := ""
                  for i := 0; i < p/10; i++ { bars += "#" }
                  empty := ""
                  for i := len(bars); i < 10; i++ { empty += "-" }
                  fmt.Printf("%-12s [%s%s] %3d%%\n", h, bars, empty, p)
              }

              fmt.Println("\n\033[1;36mInsights:\033[0m")
              fmt.Println("- Dominate your day! ❄️")
              fmt.Println("- Balance is key ⚡")
              fmt.Println("- Commit often, level up 🏆")
              fmt.Println("- Stay frosty! 🧊\n")

              days := []string{"Mon","Tue","Wed","Thu","Fri","Sat","Sun"}
              today := int(time.Now().Weekday())
              cal := ""
              for i := 0; i < 7; i++ {
                  if i < today { cal += "✓ " }
                  else if i == today { cal += "→ " }
                  else { cal += "✗ " }
              }

              fmt.Println("\033[1;35m==== Weekly Calendar ====\033[0m")
              fmt.Println(days)
              fmt.Println(cal)
              fmt.Println("\033[1;32mCI/CD LIVE — Time-Freeze dashboard fully alive in logs! 🔥\033[0m")
          }
          EOF
          go run dashboard.go
