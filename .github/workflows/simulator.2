name: Time-Freeze Node + App-State CI
on:
  push:
    branches:
      - main

jobs:
  node-and-simulate:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Checkout repo
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3Ô∏è‚É£ Show Node & npm versions
      - name: Node & npm versions
        run: |
          node -v
          npm -v
          echo "CI/CD environment is ready for time-freeze!"

      # 4Ô∏è‚É£ Show all components and preview first 20 lines
      - name: Show components preview
        run: |
          echo -e "\033[1;34m==== Listing src/components folder ====\033[0m"
          if [ -d src/components ]; then
            for file in src/components/*.js; do
              [ -e "$file" ] || continue
              echo -e "\033[1;33m------ $file ------\033[0m"
              head -n 20 "$file"
              echo ""
            done
          else
            echo -e "\033[1;31mNo components folder found\033[0m"
          fi

      # 5Ô∏è‚É£ Simulate dynamic app state
      - name: Simulate Habit Tracker dashboard
        run: |
          echo -e "\033[1;34m==== Time-Freeze App State ====\033[0m"
          declare -A habits
          habits=( ["Code Daily"]=50 ["Exercise"]=30 ["Read"]=70 ["Meditate"]=20 )
          
          for habit in "${!habits[@]}"; do
            progress=${habits[$habit]}
            bars=$((progress/10))
            empty=$((10-bars))
            printf "%-12s [" "$habit"
            printf "\033[1;32m"
            for i in $(seq 1 $bars); do printf "#"; done
            printf "\033[0m"
            for i in $(seq 1 $empty); do printf "-"; done
            printf "] %d%% " "$progress"
            if [ "$progress" -eq 100 ]; then
              echo -e "üéâ"
            else
              echo ""
            fi
          done

          echo ""
          echo -e "\033[1;36mInsights:\033[0m"
          echo "- Keep pushing commits! üöÄ"
          echo "- Balance habits for better productivity. üí°"
          echo ""

          # 6Ô∏è‚É£ Moving weekly calendar
          echo -e "\033[1;35mWeekly Calendar Preview:\033[0m"
          DAYS=(Mon Tue Wed Thu Fri Sat Sun)
          TODAY=$(date +%u) # 1=Mon, 7=Sun
          CAL=""
          for i in {1..7}; do
            if [ $i -lt $TODAY ]; then
              CAL+="‚úì "
            elif [ $i -eq $TODAY ]; then
              CAL+="‚Üí "
            else
              CAL+="‚úó "
            fi
          done
          echo "[${DAYS[@]}]"
          echo "[$CAL]"

      # 7Ô∏è‚É£ Confirm workflow ran
      - name: Confirm
        run: echo -e "\033[1;32mCI/CD simulation complete ‚Äî Node + app-state live in logs! üî•\033[0m"
